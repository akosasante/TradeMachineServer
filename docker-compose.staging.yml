services:
  app:
    image: ghcr.io/akosasante/trade-machine-server:${IMAGE_TAG}
    container_name: staging_trademachine
    restart: always
    network_mode: "host"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3015}
      - IP=${IP:-0.0.0.0}
      - ORM_CONFIG=${ORM_CONFIG:-staging}
      - APP_ENV=${APP_ENV:-staging}
      - DATABASE_URL=${DATABASE_URL}
      - BASE_DIR=${BASE_DIR:-/app}
      - REDIS_IP=${REDIS_IP}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDISPASS=${REDISPASS}
      - SESSION_SECRET=${SESSION_SECRET}
      - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
      - ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT:-staging}
      - PG_HOST=${PG_HOST:-localhost}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - PG_SCHEMA=${PG_SCHEMA:-staging}
      - BASE_URL=${BASE_URL}
      - EMAIL_KEY_V3=${EMAIL_KEY_V3}
      - EMAIL_API_URL_V3=${EMAIL_API_URL_V3:-https://api.sendinblue.com/v3/smtp}
      - SENDINBLUE_SMTP_PASS=${SENDINBLUE_SMTP_PASS}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ESPN_COOKIE=${ESPN_COOKIE}
      - ESPN_SWID=${ESPN_SWID}
      - DB_LOGS=${DB_LOGS:-true}
      - ENABLE_LOGS=${ENABLE_LOGS:-true}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-trademachine-server}
      - OTEL_SERVICE_VERSION=${OTEL_SERVICE_VERSION:-2.0.1}
      - OTEL_LOG_LEVEL=${OTEL_LOG_LEVEL:-INFO}
      - OTEL_TRACES_SAMPLER=${OTEL_TRACES_SAMPLER:-parentbased_always_on}
      - OTEL_TRACES_SAMPLER_ARG=${OTEL_TRACES_SAMPLER_ARG:-1.0}
      - SHEETS_CREDENTIAL_FILE=${SHEETS_CREDENTIAL_FILE}
      - SHEETS_API_EMAIL=${SHEETS_API_EMAIL}
      - SHEETS_API_KEY=${SHEETS_API_KEY}
      - TRADE_SPREADSHEET_ID=${TRADE_SPREADSHEET_ID}
      - TRADE_WORKSHEET_ID=${TRADE_WORKSHEET_ID}
      - HOME=/tmp
      - npm_config_cache=/tmp/.npm
    # When using network_mode: "host", the ports section is ignored
    # because the container shares the host's network stack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3015/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s