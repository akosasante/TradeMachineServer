name: CI Workflow

on : [push]

jobs:
  test-in-container:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server

      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build js files
        run: npm run build-ts

      - name: Setup db
        run: |
          node db_setup.js
        env:
          PGUSER: ${{ secrets.PG_USER }}
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}
          PGDATABASE: ${{ secrets.PG_DB }}

      - name: Run unit and integration tests
        run: npm run test-debug -- --testPathPattern=app.test.ts
        env:
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_DB: ${{ secrets.PG_DB }}
          BASE_DIR: ${{ github.workspace }}
          ESPN_COOKIE: ${{ secrets.ESPN_COOKIE }}
          ESPN_SWID: ${{ secrets.ESPN_SWID }}
          BASE_URL: http://localhost:8080

