name: CI Workflow

on : [push]

jobs:
  test-in-container:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server

      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build js files
        run: npm run build-ts

      - name: Database setup
        run: |
          npm run gen-migrate-test -- "init"
          npm run build
          ls src/db/migrations -la
          ls dist/db/migrations -la
          npm run run-migrate-test
#      - name: Debugging
#        run: |
#          docker exec -d $(docker ps -q -f "name=postgres" -l) ls
#          docker exec -d $(docker ps -q -f "name=postgres" -l) ps aux
#          docker exec -d $(docker ps -q -f "name=postgres" -l) psql -l -U postgres -a
#          docker exec -d $(docker ps -q -f "name=postgres" -l) sh echo '\dn' | psql -U postgres -d ${{ secrets.PG_DB }} -a
#          docker exec -d $(docker ps -q -f "name=postgres" -l) sh echo '\dt' | psql -U postgres -d ${{ secrets.PG_DB }} -a

      - name: Run unit and integration tests
        run: npm run test-debug
        env:
          PG_USER: ${{ job.services.postgres.env.POSTGRES_USER }}
          PG_PASSWORD: ${{ job.services.postgres.env.POSTGRES_PASSWORD }}
          PG_DB: ${{ job.services.postgres.env.POSTGRES_DB }}
          BASE_DIR: ${{ env.GITHUB_WORKSPACE }}
          ESPN_COOKIE: ${{ secrets.ESPN_COOKIE }}
          ESPN_SWID: ${{ secrets.ESPN_SWID }}

