name: Build and Publish Docker Image

on:
  push:
    branches: [main, staging, dockerize]
  pull_request:
    branches: [main, staging, dockerize]
  # Manual trigger
  workflow_dispatch:
    inputs:
      build_only:
        description: 'Build image without deploying'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Notify Rollbar of deploy start
        uses: rollbar/github-deploy-action@2.1.2
        id: rollbar_pre_deploy
        with:
          environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          version: ${{ github.sha }}
          status: "started"
          local_username: ${{ github.actor }}
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
          ROLLBAR_USERNAME: "aaasante"

      - uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=semver,pattern={{version}}
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Notify Rollbar of build completion
        if: github.event_name != 'pull_request'
        uses: rollbar/github-deploy-action@2.1.2
        with:
          environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          version: ${{ github.sha }}
          status: "succeeded"
          local_username: ${{ github.actor }}
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
          ROLLBAR_USERNAME: "aaasante"
          DEPLOY_ID: ${{ steps.rollbar_pre_deploy.outputs.deploy_id }}