version: '3.8'

services:
  app:
    build:
      context: .
      target: build
    # Install PostgreSQL client for database initialization
    # This is needed for the docker-init.sh script
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - IP=0.0.0.0
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=trade_machine
      - ORM_CONFIG=development
      - BASE_DIR=/app
      - REDIS_IP=redis
      - REDIS_PORT=6379
      - SESSION_SECRET=local_dev_secret
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/trade_machine?schema=dev
      - BASE_URL=http://localhost:3030
      - COOKIE_SECURE=false
      # Help Node.js find modules correctly
      - NODE_PATH=/app:/app/node_modules
    volumes:
      - ./:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "apt-get update && apt-get install -y postgresql-client && ./docker-init.sh && make dev-server"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=trade_machine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:5
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  redis_data: