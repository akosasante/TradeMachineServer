# TradeMachine Server - connects to shared infrastructure
#
# Prerequisites:
#   1. Start shared infrastructure first: cd ../; docker-compose -f docker-compose.shared.yml up -d
#   2. Ensure .env file exists in parent directory with database credentials
#
# Usage: docker-compose up -d

services:
  app:
    build:
      context: .
      target: build
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - IP=0.0.0.0
      # Connect to shared PostgreSQL (external port 5438, internal 5432)
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=${DATABASE_USER:-trader_user}
      - PG_PASSWORD=${DATABASE_PASSWORD:-dev_password_change_me}
      - PG_DB=${DATABASE_NAME:-trade_dn}
      - ORM_CONFIG=development
      - BASE_DIR=/app
      # Connect to shared Redis
      - REDIS_IP=redis
      - REDIS_PORT=6379
      - SESSION_SECRET=local_dev_secret
      - DATABASE_URL=postgresql://${DATABASE_USER:-trader_user}:${DATABASE_PASSWORD:-dev_password_change_me}@postgres:5432/${DATABASE_NAME:-trade_dn}?schema=dev
      # BASE_URL points to frontend for email templates
      - BASE_URL=http://localhost:3030
      - COOKIE_SECURE=false
      # Help Node.js find modules correctly
      - NODE_PATH=/app:/app/node_modules
    volumes:
      - ./:/app
      - /app/node_modules
    command: bash -c "apt-get update && apt-get install -y postgresql-client && ./docker-init.sh && make dev-server"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - trade_machine_shared

# Connect to shared infrastructure network
networks:
  trade_machine_shared:
    external: true
    name: trade_machine_shared